generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["groupBy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  userId      Int
  privacy     PollPrivacy @default(PUBLIC)
  user        User        @relation(fields: [userId], references: [id])
  Answer      Answer[]
  options     Option[]
}

model Option {
  id          Int      @id @default(autoincrement())
  description String
  pollId      Int
  votes       Int      @default(0)
  poll        Poll     @relation(fields: [pollId], references: [id])
  answers     Answer[]
}

model Answer {
  id       Int    @id @default(autoincrement())
  optionId Int
  userId   Int
  pollId   Int
  option   Option @relation(fields: [optionId], references: [id])
  poll     Poll   @relation(fields: [pollId], references: [id])
  user     User   @relation(fields: [userId], references: [id])

  @@unique([userId, pollId], name: "user_poll_unique_constraint")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map("sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")
  Answer        Answer[]
  Poll          Poll[]

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_requests")
}

enum PollPrivacy {
  PUBLIC
  LINKED
  PRIVATE
}
